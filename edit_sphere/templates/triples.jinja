{% macro render_triple(triple, subject) %}
    <li class="d-flex align-items-center property-value">
        <span class="flex-grow-1 d-flex flex-column justify-content-center p-3 w-75">
            {% if triple['object']['value'] != triple['object']['value'] | human_readable_predicate %}
                <span class="object-value ellipsis">
                    {{ triple['object']['value'] | human_readable_predicate }}
                </span>
            {% elif triple['object']['value'].startswith('http://') or triple['object']['value'].startswith('https://') %}
                <span title="{{ triple['object']['value'] }}" class="object-value ellipsis">
                    <a href="{{url_for('show_triples', subject=triple['object']['value']|urlencode)}}" alt="Link to the entity {{ triple['object']['value'] }}">{{ triple['object']['value'] }}</a>
                </span>
            {% else %}
                <span class="object-value ellipsis">{{ triple['object']['value'] }}</span>
            {% endif %}
            <form class="edit-form d-none"
                action="{{ url_for('update_triple') }}"
                method="post">
                {{ update_form.subject(value=subject) }}
                {{ update_form.predicate(value=triple['predicate']['value']) }}
                {{ update_form.old_value(value=triple['object']['value']) }}
                {% if optional_values[triple['predicate']['value']] %}
                    <select name="new_value" class="form-control mb-4">
                        {% for value in optional_values[triple['predicate']['value']] %}
                            <option value="{{ value }}" {% if value == triple['object']['value'] %}selected{% endif %}>{{ value | human_readable_predicate }}</option>
                        {% endfor %}
                    </select>
                {% else %}
                    {{ update_form.new_value(class="form-control mb-4", value=triple['object']['value']) }}
                {% endif %}
                <div>
                    <button type="submit" class="btn btn-primary">{{_('Update')}}</button>
                    <button type="button" class="btn btn-secondary cancel-button">{{_('Cancel')}}</button>
                </div>
            </form>
        </span>
        <div class="align-self-start">
            <div class="d-flex flex-column flex-sm-row">
                {% if shacl and triple['predicate']['value'] in mandatory_values and triple['object']['value'] == mandatory_values[triple['predicate']['value']] %}
                    <div title="{{ _('This property is mandatory and cannot be edited') }}" class="info-cursor">
                {% endif %}
                    <button class="btn btn-outline-secondary edit-button m-2"
                            {% if shacl and triple['predicate']['value'] in mandatory_values and triple['object']['value'] == mandatory_values[triple['predicate']['value']] %}disabled{% endif %}>
                        <i class="bi bi-pencil-square"></i>
                    </button>
                {% if shacl and triple['predicate']['value'] in mandatory_values and triple['object']['value'] == mandatory_values[triple['predicate']['value']] %}
                    </div>
                {% endif %}
                {% if shacl and (triple['predicate']['value'] not in can_be_deleted or (triple['predicate']['value'] in mandatory_values and triple['object']['value'] == mandatory_values[triple['predicate']['value']])) %}
                    <div title="{{ _('This property is mandatory and cannot be deleted') }}" class="info-cursor">
                {% endif %}
                    <button class="btn btn-outline-danger delete-button m-2" 
                            data-subject="{{ subject }}" 
                            data-predicate="{{ triple['predicate']['value'] }}" 
                            data-object="{{ triple['object']['value'] }}"
                            {% if shacl and (triple['predicate']['value'] not in can_be_deleted or (triple['predicate']['value'] in mandatory_values and triple['object']['value'] == mandatory_values[triple['predicate']['value']])) %}disabled{% endif %}>
                        <i class="bi bi-trash"></i> <!-- Icona di cancellazione -->
                    </button>
                {% if shacl and (triple['predicate']['value'] not in can_be_deleted or (triple['predicate']['value'] in mandatory_values and triple['object']['value'] == mandatory_values[triple['predicate']['value']])) %}
                    </div>
                {% endif %}
            </div>
        </div>
    </li>
{% endmacro %}

{% macro add_form(type) %}
    <div class="mb-5 add-form-{{ type }} d-none">
        <h5>{{_('Add a new piece of information')}}</h5>
        <form action="{{ url_for('add_triple') }}" method="post">
            {{ create_form.subject(value=subject) }}
            <div class="form-group">
                {{ create_form.predicate(class="form-control predicate-select") }}
            </div>
            <div class="form-group mt-3">
                <label for="object">{{_('Value')}}</label>
                {% if shacl %}
                    <select name="object" class="form-control object-input" style="display: none;">
                        {% for pred, values in optional_values.items() %}
                            {% for value in values %}
                                <option value="{{ value }}" data-predicate="{{ pred }}">{{ value | human_readable_predicate }}</option>
                            {% endfor %}
                        {% endfor %}
                    </select>
                {% endif %}
                <input type="text" name="object" class="form-control object-input-text" style="display: none;">
            </div>
            <div class="mt-3">
                <button type="submit" class="btn btn-primary">{{_('Add')}}</button>
                <button type="button" class="btn btn-secondary cancel-add-button-{{ type }}">{{_('Cancel')}}</button>
            </div>
        </form>
    </div>
{% endmacro %}

{% extends "_base.jinja" %}

{% block content %}
<div class="container">
    <h2 class="mb-4 ellipsis">{{_('About')}} {{ subject | human_readable_predicate }}</h2>

    {% with messages = get_flashed_messages() %}
        {% if messages %}
            <div class="row col-sm-12 col-md-6 text-center mb-4 mx-auto">
                <div class="alert alert-warning">
                    {{ messages[0] }}
                </div>
            </div>
        {% endif %}
    {% endwith %}

    {% if history[subject] %}
    <div>
        <a href="{{ url_for('entity_history', entity_uri=subject) }}" class="btn btn-outline-primary">
            <i class="bi bi-clock-history"></i> {{_('Time machine')}}
        </a>
    </div>
    {% endif %}

    {% if triples %}

        {% set attributes_triples = [] %}
        {% set links_triples = [] %}
        {% for triple in triples %}
            {% if triple['object']['value'] != triple['object']['value'] | human_readable_predicate or not (triple['object']['value'].startswith('http://') or triple['object']['value'].startswith('https://')) %}
                {% set _ = attributes_triples.append(triple) %}
            {% elif triple['object']['value'] == triple['object']['value'] | human_readable_predicate and (triple['object']['value'].startswith('http://') or triple['object']['value'].startswith('https://')) %}
                {% set _ = links_triples.append(triple) %}
            {% endif %}
        {% endfor %}
    
        {% for type, type_human, triples_set_specific in [('attributes', _('attributes'), attributes_triples), ('links', _('links to other resources'), links_triples)] %}
            {% if triples_set_specific %}
                <div class="d-flex justify-content-start align-items-baseline mt-5 mb-3">
                    <h4 class="me-4">{{ type_human.capitalize() }}</h4>
                    {% if shacl and not can_be_added %}
                    <span title="{{ _('You cannot add more properties; the limit for each property has been reached') }}" class="info-cursor">
                        <button class="btn btn-outline-success add-button-{{ type }}" disabled><i class="bi bi-plus-lg"></i></button>
                    </span>
                    {% else %}
                    <button class="btn btn-outline-success add-button-{{ type }}" title="{{_('Add new ' + type_human)}}"><i class="bi bi-plus-lg"></i></button>
                    {% endif %}
                </div>
                {{ add_form(type) }}
                {% for predicate, triples_set_generic in grouped_triples.items() %}
                    {% set relevant_triples = triples_set_generic|select('in', triples_set_specific)|list %}
                    {% if relevant_triples %}
                        <div class="predicate-group mb-4">
                            <span class="fw-bold">{{ predicate | human_readable_predicate }}</span>
                            {% for triple in relevant_triples %}
                                {{ render_triple(triple, subject) }}
                            {% endfor %}
                        </div>
                    {% endif %}
                {% endfor %}
            {% endif %}
        {% endfor %}

    {% else %}
        <p class="alert alert-warning mt-5 mb-4">{{_('There is no information related to this entity in the dataset')}}</p>
        <button class="btn btn-outline-success add-button-links" title="{{_('Add new link')}}">{{_("Let's add some metadata")}}</button>
        <div class="add-form-links d-none mt-4">
            <h5>{{_('Add a new piece of information')}}</h5>
            <form action="{{ url_for('add_triple') }}" method="post">
                <input type="hidden" name="subject" value="{{ subject }}">
                <div class="form-group">
                    <label for="predicate">{{_('Property')}}</label>
                    <input type="text" class="form-control" name="predicate" required>
                </div>
                <div class="form-group mt-3">
                    <label for="object">{{_('Value')}}</label>
                    <input type="text" class="form-control" name="object" required>
                </div>
                <div class="mt-3">
                    <button type="submit" class="btn btn-primary">{{_('Add')}}</button>
                    <button type="button" class="btn btn-secondary cancel-add-button-links">{{_('Cancel')}}</button>
                </div>
            </form>
        </div>              
    {% endif %}
</div>

<script>
    $(document).ready(function () {
        const optional_values = {{ optional_values|tojson|safe }};
        const shacl = {{ shacl|tojson|safe }};

        function toggleEditForm(listItem) {
            const form = listItem.find('.edit-form');
            const valueSpan = listItem.find('.object-value');
            form.toggleClass('d-none');
            valueSpan.toggleClass('d-none');
        }

        function showAddFormOrAlert(type) {
            can_be_added = {{ can_be_added|tojson|safe }}
            if (can_be_added == null) {
                $(`.add-form-${type}`).toggleClass('d-none');
            } else {
                if (can_be_added.length == 0) {
                    Swal.fire({
                        title: "{{ _('Warning') }}",
                        text: "{{ _('You cannot add more properties; the limit for each property has been reached') }}",
                        icon: 'warning',
                        confirmButtonColor: '#3085d6'
                    });
                } else {
                    $(`.add-form-${type}`).toggleClass('d-none');
                }
            }
        }

        function updateObjectInput() {
            if (!shacl) {
                $('.object-input-text').show();
                return
            }
            const selectedPredicate = $('.predicate-select').val();
            if (optional_values[selectedPredicate].length > 0) {
                $('.object-input-text').hide();
                $('.object-input').show().find('option').hide().filter(`[data-predicate="${selectedPredicate}"]`).show();
            } else {
                $('.object-input').hide();
                $('.object-input-text').show();
            }
        }

        $('.edit-button').click(function () {
            toggleEditForm($(this).closest('.property-value'));
        });

        $('.cancel-button').click(function () {
            toggleEditForm($(this).closest('.property-value'));
            toggleEditForm($(this).closest('form'));
        });

        $('.delete-button').click(function() {
            const subject = $(this).data('subject');
            const predicate = $(this).data('predicate');
            const object_value = $(this).data('object');
            if (!shacl || {{ can_be_deleted | safe }}.includes(predicate)) {
                Swal.fire({
                    title: "{{_('Are you sure?')}}",
                    text: "{{_('You are about to delete this information. In any case, it will be possible to restore it')}}",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: "{{_('Yes, delete it!')}}"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.post('/delete_triple', {
                            subject: subject,
                            predicate: predicate,
                            object: object_value
                        }, function() {
                            Swal.fire(
                                "{{_('Deleted!')}}",
                                "{{_('The data was deleted correctly')}}",
                                'success'
                            ).then(() => {
                                location.reload();
                            });
                        });
                    }
                }); 
            } else {
                Swal.fire({
                    title: "{{ _('Warning') }}",
                    text: "{{ _('This property is mandatory and cannot be deleted') }}",
                    icon: 'warning',
                    confirmButtonColor: '#3085d6'
                });
            }
        });

        $('.add-button-attributes, .add-button-links').click(function() {
            showAddFormOrAlert($(this).hasClass('add-button-attributes') ? 'attributes' : 'links');
            updateObjectInput();
        });
        $('.cancel-add-button-attributes').click(function() {
            $('.add-form-attributes').addClass('d-none');
        });
        $('.cancel-add-button-links').click(function() {
            $('.add-form-links').addClass('d-none');
        });
        $('.predicate-select').change(updateObjectInput);
    });
</script>
{% endblock %}